name: Test latest changes in fleetctl preview

# Tests the `fleetctl preview` command with latest changes in fleetctl and
# docs/01-Using-Fleet/standard-query-library/standard-query-library.yml

on:
  push:
    branches:
      - main
      - patch-*
    paths:
      - 'cmd/fleetctl/**.go'
      - 'pkg/**.go'
      - 'server/service/**.go'
      - 'server/context/**.go'
      - 'orbit/**.go'
      - 'ee/fleetctl/**.go'
      - 'docs/01-Using-Fleet/standard-query-library/standard-query-library.yml'
      - '.github/workflows/fleetctl-preview-latest.yml'
  pull_request:
    paths:
      - 'cmd/fleetctl/**.go'
      - 'pkg/**.go'
      - 'server/service/**.go'
      - 'server/context/**.go'
      - 'orbit/**.go'
      - 'ee/fleetctl/**.go'
      - 'docs/01-Using-Fleet/standard-query-library/standard-query-library.yml'
      - '.github/workflows/fleetctl-preview-latest.yml'
  workflow_dispatch: # Manual

permissions:
  contents: read

jobs:
  test-preview:
    timeout-minutes: 60
    strategy:
      matrix:
        # Doesn't work on Windows because Linux Docker containers are not supported.
        os: [ubuntu-latest, macos-latest]
        go-version: ['1.19.1']
    runs-on: ${{ matrix.os }}
    steps:

    - name: Start colima
      timeout-minutes: 5
      if: contains(matrix.os, 'macos')
      run: |
        brew install docker docker-compose
        colima start

    - name: Install Go
      uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f # v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout Code
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2

    - name: Build Fleetctl
      run: make fleetctl

    - name: Run fleetctl preview
      shell: bash
      run: |
        ./build/fleetctl preview --std-query-lib-file-path $(pwd)/docs/01-Using-Fleet/standard-query-library/standard-query-library.yml
        sleep 10
        ./build/fleetctl get hosts | tee hosts.txt
        [ $( cat hosts.txt | grep online | wc -l) -eq 8 ]

    - name: Get fleet logs
      run: |
        FLEET_LICENSE_KEY=foo docker compose -f ~/.fleet/preview/docker-compose.yml logs fleet01 fleet02 > fleet-logs.txt
        # Copying logs, otherwise the upload-artifact action uploads the logs in a hidden folder (.fleet)
        cp ~/.fleet/preview/orbit.log orbit.log
        cp -r ~/.fleet/preview/logs osquery_result_status_logs
      shell: bash

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v2
      with:
        name: ${{ matrix.os }}-log
        path: |
          fleet-logs.txt
          orbit.log
          osquery_result_status_logs
