name: Test packaging

# This workflow tests packaging of Fleet-osquery with the
# `fleetctl package` command. It fetches the targets: orbit,
# osquery and fleet-desktop from the default (Fleet's) TUF server,
# https://tuf.fleetctl.com.

on:
  push:
    branches:
      - main
      - patch-*
  pull_request:
    paths:
      - 'cmd/fleetctl/**.go'
      - 'pkg/**.go'
      - 'server/service/**.go'
      - 'server/context/**.go'
      - 'orbit/**.go'
      - 'ee/fleetctl/**.go'
      - 'tools/fleetctl-docker/**'
      - 'tools/wix-docker/**'
      - 'tools/bomutils-docker/**'
      - '.github/workflows/test-packaging.yml'
  workflow_dispatch: # Manual

permissions:
  contents: read

jobs:
  test-packaging:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: ['^1.19.1']
    runs-on: ${{ matrix.os }}

    steps:

    - name: Install Docker
      timeout-minutes: 20
      if: matrix.os == 'macos-latest'
      run: |
        brew install docker docker-compose colima
        colima start

    - name: Pull fleetdm/wix
      # Run in background while other steps complete to speed up the workflow
      run: docker pull fleetdm/wix:latest &

    - name: Install Go
      uses: actions/setup-go@84cbf8094393cdc5fe1fe1671ff2647332956b1a # v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout Code
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2

    # It seems faster not to cache Go dependencies
    - name: Install Go Dependencies
      run: make deps-go

    - name: Build fleetctl
      run: make fleetctl

    - name: Build DEB
      run: ./build/fleetctl package --type deb --enroll-secret=foo --fleet-url=https://localhost:8080

    - name: Build DEB with Fleet Desktop
      run: ./build/fleetctl package --type deb --enroll-secret=foo --fleet-url=https://localhost:8080 --fleet-desktop
      
    - name: Build RPM
      run: ./build/fleetctl package --type rpm --enroll-secret=foo --fleet-url=https://localhost:8080
      
    - name: Build RPM with Fleet Desktop
      run: ./build/fleetctl package --type rpm --enroll-secret=foo --fleet-url=https://localhost:8080 --fleet-desktop

    - name: Build MSI
      run: ./build/fleetctl package --type msi --enroll-secret=foo --fleet-url=https://localhost:8080

    - name: Build MSI with Fleet Desktop
      run: ./build/fleetctl package --type msi --enroll-secret=foo --fleet-url=https://localhost:8080 --fleet-desktop

    - name: Build PKG
      run: ./build/fleetctl package --type pkg --enroll-secret=foo --fleet-url=https://localhost:8080

    - name: Build PKG with Fleet Desktop
      run: ./build/fleetctl package --type pkg --enroll-secret=foo --fleet-url=https://localhost:8080 --fleet-desktop
