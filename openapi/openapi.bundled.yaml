openapi: 3.0.0
info:
  title: Fleet API
  description: |
    The Fleet REST API.
  version: '2022-04-01'
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://localhost:8080
    description: Local development server.
security: []
paths:
  /api/v1/fleet/login:
    post:
      operationId: login
      summary: Login
      description: >
        Authenticates the user with the specified credentials.

        Use the token returned from this endpoint perform authenticated
        requests.


        This API endpoint is not available to SSO users, since email/password
        login is disabled for SSO users.

        To get an API token for an SSO user, you can use the Fleet UI.
      x-oapi-codegen-middlewares:
        - limit
      requestBody:
        required: true
        $ref: '#/components/requestBodies/Login'
      responses:
        '200':
          $ref: '#/components/responses/Token'
        '401':
          $ref: '#/components/responses/Unauthenticated'
  /api/v1/fleet/users/{userID}:
    get:
      operationId: getUserByID
      summary: Get a user by ID
      description: |
        Get a user by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userID
          schema:
            type: integer
            format: uint
          required: true
          description: The user's ID.
      responses:
        '200':
          $ref: '#/components/responses/User'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/v1/fleet/hosts:
    get:
      operationId: getHosts
      description: |
        List hosts
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search query keywords
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Host'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    Token:
      type: object
      properties:
        token:
          description: Token to use for authenticated requests.
          type: string
      required:
        - token
    Error:
      description: |
        todo
      type: object
      properties:
        message:
          type: string
          description: |
            A human readable error message.
        errors:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: todo
              reason:
                type: string
                description: todo
      required:
        - message
    User:
      type: object
      properties:
        id:
          type: integer
          format: uint
      required:
        - id
    UserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
    Host:
      type: object
      properties:
        id:
          type: integer
          format: uint
        hostname:
          type: string
      required:
        - id
        - hostname
  requestBodies:
    Login:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Login'
      required: true
  responses:
    Token:
      description: null
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Token'
    Unauthenticated:
      description: Request not authenticated due to missing, invalid, authentication info.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    User:
      description: null
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserResponse'
    NotFound:
      description: A specified resource is not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
